#!/bin/env python3
import argparse
import numpy as np
from pathlib import Path
from math import pi

from sheppard_pes import Pes
from dynamics import trajectory
import lib.xyz as xyz

def parse():
    parser = argparse.ArgumentParser(
        description="Run a scan along the C-C-C-C dihedral")
    parser.add_argument("pes_files", type=Path,
                        help="Path containings points for the PES")
    parser.add_argument("init_conds", type=Path,
                        help="Path detailing initial positions and velocities")
    parser.add_argument("destination", type=Path,
                        help="Path for output files")
    return parser.parse_args()


def main():
    args = parse()

    shep = Pes.pes_from_folder(args.pes_files)

    # (H4-6)(C0)(C1)(H7-8)(C2)(H9-10)(C3)(H11-13)

    geom = xyz.Geometry.from_file(args.init_conds/"pos.xyz")

    angle=0
    step=2*pi/100

    with open("./scan.dat",'w') as file:
        for t in range(0,201):
            file.write(f"{angle} {shep.eval_point_geom(geom)}\n")
            geom.rot_bond([3,9,10,11,12,13],1,2,step)
            angle+=step


    # def get_grad(self):
    #     # launch terachem job
    #     self.num_calcs += 1
    #     job = f"{self.num_calcs:06d}"
    #     geom = xyz.Geometry(len(self.elements),"generated by grow_vv",self.elements,self.x)
    #     try:
    #         with conman.minimal_context(self.work_dir/job,self.terachem_input,self.sbatch_input) as man:
    #             print("launching job")
    #             print(os.getcwd())
    #             geom.write_file("geom.xyz")
    #             man.launch()
    #             man.wait_for_job()
    #             output = tcReader.gradient.from_file("tc.out")
    #     except conman.DirNotEmpty:
    #         if self.restart:
    #             print("loading existing data")
    #             with conman.enter_dir(self.work_dir/job):
    #                 output = tcReader.gradient.from_file("tc.out")
    #     return output.grad


if __name__ == "__main__":
    main()
